version: '3'
services:
  airflow:
    image: apache/airflow:2.10.4
    container_name: airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: mysql+mysqlconnector://root:SuaSenha@mysql:3306/analista_bi
      AIRFLOW__CELERY__RESULT_BACKEND: db+mysql://root:SuaSenha@mysql:3306/analista_bi
      AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
    volumes:
      - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
      - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
      - ${AIRFLOW_PROJ_DIR:-.}/config:/opt/airflow/config
      - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
    networks:
      - airflow_network
    depends_on:
      - mysql
      - redis

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: Sasuke110800@
      MYSQL_DATABASE: analista_bi
    networks:
      - airflow_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

  redis:
    image: redis:7.2-bookworm
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 50
      start_period: 30s
    restart: always
    networks:
      - airflow_network

  airflow-webserver:
    image: apache/airflow:2.10.4
    container_name: airflow-webserver
    command: webserver
    ports:
      - "8080:8080"
    networks:
      - airflow_network
    depends_on:
      - airflow

  airflow-scheduler:
    image: apache/airflow:2.10.4
    container_name: airflow-scheduler
    command: scheduler
    networks:
      - airflow_network
    depends_on:
      - airflow

  airflow-worker:
    image: apache/airflow:2.10.4
    container_name: airflow-worker
    command: celery worker
    networks:
      - airflow_network
    depends_on:
      - airflow

  airflow-init:
    image: apache/airflow:2.10.4
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        if [[ -z "${AIRFLOW_UID}" ]]; then
          echo -e "\033[1;33mWARNING!!!: AIRFLOW_UID not set!\e[0m"
        fi
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: mysql+mysqlconnector://root:SuaSenha@mysql:3306/analista_bi
      AIRFLOW__CELERY__RESULT_BACKEND: db+mysql://root:SuaSenha@mysql:3306/analista_bi
      AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
      _AIRFLOW_DB_MIGRATE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
      _PIP_ADDITIONAL_REQUIREMENTS: ''
    user: "0:0"
    volumes:
      - ${AIRFLOW_PROJ_DIR:-.}:/sources

  airflow-cli:
    image: apache/airflow:2.10.4
    container_name: airflow-cli
    command:
      - bash
      - -c
      - airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: mysql+mysqlconnector://root:SuaSenha@mysql:3306/analista_bi
      AIRFLOW__CELERY__RESULT_BACKEND: db+mysql://root:SuaSenha@mysql:3306/analista_bi
      AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    networks:
      - airflow_network

  flower:
    image: apache/airflow:2.10.4
    container_name: airflow-flower
    command: celery flower
    ports:
      - "5555:5555"
    networks:
      - airflow_network
    depends_on:
      - redis
      - airflow
      - mysql

volumes:
  postgres-db-volume:
  airflow-logs:
  airflow-dags:
  airflow-plugins:

networks:
  airflow_network:
    driver: bridge

##docker-compose up -d
